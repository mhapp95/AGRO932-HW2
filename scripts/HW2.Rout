
R version 3.5.3 (2019-03-11) -- "Great Truth"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

Microsoft R Open 3.5.3
The enhanced R distribution from Microsoft
Microsoft packages Copyright (C) 2019 Microsoft Corporation

Using the Intel MKL for parallel mathematical computing (using 16 cores).

Default CRAN mirror snapshot taken on 2019-04-15.
See: https://mran.microsoft.com/.

> #set working directory
> setwd('..')
> #load libraries
> library(data.table)
> library(ggplot2)
> library(reshape2)

Attaching package: ‘reshape2’

The following objects are masked from ‘package:data.table’:

    dcast, melt

> 
> # Read in data file
> Data <- fread("data/FlintGarcia09.txt", header=TRUE)
> # Convert missing data to NA
> Data[Data=="."] <- NA
> 
> # set up data classes
> Data$INBRED <- as.factor(Data$INBRED)
> Data$
+ Data$Env <- as.factor(Data$Env)
> #selected tassel branch count, plant yield, and cob weight as traits
>   #inbreds
> Data$TSLBCHCNT_Inbred  <- as.numeric(as.character((Data$TSLBCHCNT_Inbred)))
> Data$CobWt_Inbred <- as.numeric(as.character((Data$CobWt_Inbred)))
> Data$PltYield_Inbred  <- as.numeric(as.character((Data$PltYield_Inbred )))
>   #hybrids
> Data$TSLBCHCNT_Hyb  <- as.numeric(as.character((Data$TSLBCHCNT_Hyb)))
> Data$CobWt_Hyb <- as.numeric(as.character((Data$CobWt_Hyb)))
> Data$PltYield_Hyb  <- as.numeric(as.character((Data$PltYield_Hyb )))
> 
> #fit linear models
>   #inbreds
> fit_tbc_i <- lm(TSLBCHCNT_Inbred ~ INBRED + Env, data=Data)
> fit_cw_i <- lm(CobWt_Inbred ~ INBRED + Env, data=Data)
> fit_py_i <- lm(PltYield_Inbred ~ INBRED + Env, data=Data)
>   #hybrids
> fit_tbc_h <- lm(TSLBCHCNT_Hyb ~ INBRED + Env, data=Data)
> fit_cw_h <- lm(CobWt_Hyb ~ INBRED + Env, data=Data)
> fit_py_h <- lm(PltYield_Hyb ~ INBRED + Env, data=Data)
> 
> #anova tables
>   #inbreds
> anova(fit_tbc_i)
Analysis of Variance Table

Response: TSLBCHCNT_Inbred
           Df Sum Sq Mean Sq F value Pr(>F)    
INBRED    297 8200.7 27.6116  6.0008 <2e-16 ***
Env         1    1.7  1.6506  0.3587 0.5499    
Residuals 191  878.9  4.6013                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> anova(fit_cw_i)
Analysis of Variance Table

Response: CobWt_Inbred
           Df  Sum Sq Mean Sq F value    Pr(>F)    
INBRED    303 14588.3   48.15  3.4265 < 2.2e-16 ***
Env         3  2010.3  670.08 47.6891 < 2.2e-16 ***
Residuals 582  8177.7   14.05                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> anova(fit_py_i)
Analysis of Variance Table

Response: PltYield_Inbred
           Df Sum Sq Mean Sq F value   Pr(>F)   
INBRED    227 124640  549.08  1.5295 0.003149 **
Env         1   2203 2202.82  6.1362 0.014426 * 
Residuals 141  50617  358.99                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
>   #hybrids
> anova(fit_tbc_h)
Analysis of Variance Table

Response: TSLBCHCNT_Hyb
           Df  Sum Sq Mean Sq F value    Pr(>F)    
INBRED    309 2944.71  9.5298  6.6036 < 2.2e-16 ***
Env         1   30.74 30.7436 21.3035 6.477e-06 ***
Residuals 233  336.25  1.4431                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> anova(fit_cw_h)
Analysis of Variance Table

Response: CobWt_Hyb
           Df  Sum Sq Mean Sq F value    Pr(>F)    
INBRED    309 24161.4   78.19  4.0005 < 2.2e-16 ***
Env         3  3672.5 1224.17 62.6316 < 2.2e-16 ***
Residuals 748 14620.1   19.55                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> anova(fit_py_h)
Analysis of Variance Table

Response: PltYield_Hyb
           Df Sum Sq Mean Sq  F value    Pr(>F)    
INBRED    261 608627    2332   1.9277 2.441e-07 ***
Env         1 161885  161885 133.8275 < 2.2e-16 ***
Residuals 228 275801    1210                       
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> #genetic variances and heritabilities
>   #inbreds, VA
> Vg_tbc_i =(anova(fit_tbc_i)[1,3] - anova(fit_tbc_i)[3,3])/4
> Ve_tbc_i = anova(fit_tbc_i)[3,3]
> h2_tbc_i = Vg_tbc_i/(Vg_tbc_i + Ve_tbc_i)
> h2_tbc_i
[1] 0.5555948
> Vg_cw_i =(anova(fit_cw_i)[1,3] - anova(fit_cw_i)[3,3])/4
> Ve_cw_i = anova(fit_cw_i)[3,3]
> h2_cw_i = Vg_cw_i/(Vg_cw_i + Ve_cw_i)
> h2_cw_i
[1] 0.3775775
> Vg_py_i =(anova(fit_py_i)[1,3] - anova(fit_py_i)[3,3])/4
> Ve_py_i = anova(fit_py_i)[3,3]
> h2_py_i = Vg_py_i/(Vg_py_i + Ve_py_i)
> h2_py_i
[1] 0.1169046
>   #hybrids, VG
> Vg_tbc_h =(anova(fit_tbc_h)[1,3] - anova(fit_tbc_h)[3,3])/4
> Ve_tbc_h = anova(fit_tbc_h)[3,3]
> H2_tbc_h = Vg_tbc_h/(Vg_tbc_h + Ve_tbc_h)
> H2_tbc_h
[1] 0.5834888
> Vg_cw_h =(anova(fit_cw_h)[1,3] - anova(fit_cw_h)[3,3])/4
> Ve_cw_h = anova(fit_cw_h)[3,3]
> H2_cw_h = Vg_cw_h/(Vg_cw_h + Ve_cw_h)
> H2_cw_h
[1] 0.4286112
> Vg_py_h =(anova(fit_py_h)[1,3] - anova(fit_py_h)[3,3])/4
> Ve_py_h = anova(fit_py_h)[3,3]
> H2_py_h = Vg_py_h/(Vg_py_h + Ve_py_h)
> H2_py_h
[1] 0.1882698
> 
> #comparisons to heterosis 
> #heterosis table
> BPH <- c(4, 66, 185)
> Trait <- c("Tassel Branch Count", "Cob Weight (g)", "Plant Yield (g/plant)")
> FGHet <- as.data.frame(cbind(Trait, BPH))
> FGHet <- as.data.frame(rbind(FGHet, FGHet))
> FGHet$BPH <- as.numeric(as.character(FGHet$BPH))
> FGHet$Group <- c(rep("Inbreds", 3), rep("Hybrids", 3)) 
> #add heritabilities
> FGHet$Heritability <- as.vector(rbind(h2_tbc_i, h2_cw_i, h2_py_i, H2_tbc_h, H2_cw_h, H2_py_h))
> #add genetic variances
> FGHet$Vg <- as.vector(rbind(Vg_tbc_i, Vg_cw_i, Vg_py_i, Vg_tbc_h, Vg_cw_h, Vg_py_h)) 
> #add environmental variance
> FGHet$Ve <- as.vector(rbind(Ve_tbc_i, Ve_cw_i, Ve_py_i, Ve_tbc_h, Ve_cw_h, Ve_py_h)) 
> #correlations
> Split <- split(FGHet, FGHet$Group)
> cor.test(Split$Inbreds$BPH, Split$Inbreds$Heritability)

	Pearson's product-moment correlation

data:  Split$Inbreds$BPH and Split$Inbreds$Heritability
t = -13.963, df = 1, p-value = 0.04552
alternative hypothesis: true correlation is not equal to 0
sample estimates:
       cor 
-0.9974451 

> cor.test(Split$Inbreds$BPH, Split$Inbreds$Vg)

	Pearson's product-moment correlation

data:  Split$Inbreds$BPH and Split$Inbreds$Vg
t = 3.421, df = 1, p-value = 0.181
alternative hypothesis: true correlation is not equal to 0
sample estimates:
      cor 
0.9598331 

> cor.test(Split$Inbreds$BPH, Split$Inbreds$Ve)

	Pearson's product-moment correlation

data:  Split$Inbreds$BPH and Split$Inbreds$Ve
t = 3.0141, df = 1, p-value = 0.2039
alternative hypothesis: true correlation is not equal to 0
sample estimates:
      cor 
0.9491267 

> cor.test(Split$Hybrids$BPH, Split$Hybrids$Heritability)

	Pearson's product-moment correlation

data:  Split$Hybrids$BPH and Split$Hybrids$Heritability
t = -17.952, df = 1, p-value = 0.03543
alternative hypothesis: true correlation is not equal to 0
sample estimates:
       cor 
-0.9984521 

> cor.test(Split$Hybrids$BPH, Split$Hybrids$Vg)

	Pearson's product-moment correlation

data:  Split$Hybrids$BPH and Split$Hybrids$Vg
t = 3.1925, df = 1, p-value = 0.1932
alternative hypothesis: true correlation is not equal to 0
sample estimates:
      cor 
0.9542797 

> cor.test(Split$Hybrids$BPH, Split$Hybrids$Ve)

	Pearson's product-moment correlation

data:  Split$Hybrids$BPH and Split$Hybrids$Ve
t = 2.9131, df = 1, p-value = 0.2105
alternative hypothesis: true correlation is not equal to 0
sample estimates:
     cor 
0.945824 

> #visualize
> png("HetvHerit.png", width=800, height=600)
> ggplot(FGHet, aes(y=Heritability, x = BPH, color = Group, fill = Group)) + 
+   geom_point(size = 3) + 
+   geom_line(size = 1, linetype = "dashed", color = "gray39") +
+   scale_color_manual(values=c("navy", "firebrick")) +
+   labs(title="Heterosis vs Heritability",
+        x="% Better Parent Heterosis", y='Heritability') +
+   theme(text = element_text(size = 14),
+         axis.text=element_text(size = 14))
> dev.off()
null device 
          1 
> png("HetvVG.png", width=800, height=600)
> ggplot(FGHet, aes(y=Vg, x = BPH, color = Group, fill = Group)) + 
+   geom_point(size = 3) + 
+   geom_line(size = 1, linetype = "dashed", color = "gray39") +
+   scale_color_manual(values=c("navy", "firebrick")) +
+   labs(title="Heterosis vs Genetic Variance",
+        x="% Better Parent Heterosis", y='Genetic Variance') +
+   theme(text = element_text(size = 14),
+         axis.text=element_text(size = 14))
> dev.off()
null device 
          1 
> png("HetvVE.png", width=800, height=600)
> ggplot(FGHet, aes(y=Ve, x = BPH, color = Group, fill = Group)) + 
+   geom_point(size = 3) + 
+   geom_line(size = 1, linetype = "dashed", color = "gray39") +
+   scale_color_manual(values=c("navy", "firebrick")) +
+   labs(title="Heterosis vs Environmental Variance",
+        x="% Better Parent Heterosis", y='Environmental Variance') +
+   theme(text = element_text(size = 14),
+         axis.text=element_text(size = 14))
> dev.off
function (which = dev.cur()) 
{
    if (which == 1) 
        stop("cannot shut down device 1 (the null device)")
    .External(C_devoff, as.integer(which))
    dev.cur()
}
<bytecode: 0x5849018>
<environment: namespace:grDevices>
> 
> FGHet$BPH <- NULL
> Melted <- melt(FGHet, id = c("Trait", "Group"))
> 
> png("InbredvHybridMeasures.png", width=800, height=600)
> ggplot(Melted, aes(y=value, x = Group, color = Group, fill = Group)) + 
+   geom_col(position = "dodge") + 
+   facet_wrap(vars(variable), scales = "free") + 
+   labs(title="Inbreds v Hybrids",
+        x="", y='') +
+   theme(text = element_text(size = 14),
+         axis.text=element_text(size = 14), 
+         legend.position = "none") 
> dev.off()
png 
  2 
> 
> proc.time()
   user  system elapsed 
  4.350   0.306   5.070 
